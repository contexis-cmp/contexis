{{- if not .Values.rollouts.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "contexis-app.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "contexis-app.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "contexis-app.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "contexis-app.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
          annotations:
            container.apparmor.security.beta.kubernetes.io/contexis: runtime/default
    spec:
          securityContext:
            runAsNonRoot: true
            fsGroup: 2000
      containers:
        - name: contexis
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["serve", "--addr", ":8000"]
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                runAsUser: 1000
          ports:
            - containerPort: 8000
          env:
            - name: CMP_ENV
              value: {{ .Values.env.CMP_ENV | quote }}
                - name: CMP_AUTH_ENABLED
                  value: {{ .Values.security.authEnabled | default "false" | quote }}
            - name: HF_MODEL_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "contexis-app.fullname" . }}-secrets
                  key: HF_MODEL_ID
            - name: HF_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ include "contexis-app.fullname" . }}-secrets
                  key: HF_ENDPOINT
          envFrom:
            - secretRef:
                name: {{ include "contexis-app.fullname" . }}-secrets
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8000
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- end }}


