# Workflow Coordinator Context: {{ .Name }}
# Generated by CMP Framework on {{ .CreatedDate }}

name: "{{ .Name }}_coordinator"
version: "{{ .Version }}"
description: "Orchestration logic for {{ .Name }} workflow"
role:
  persona: "Workflow Coordinator and Orchestrator"
  capabilities:
    - "step_execution_management"
    - "dependency_resolution"
    - "state_persistence"
    - "error_handling"
    - "resource_management"
    - "progress_monitoring"
    - "parallel_execution"
    - "retry_logic"
  limitations:
    - "no_direct_data_processing"
    - "no_user_interaction"
    - "no_external_api_calls"
    - "no_file_system_access"

# Workflow Orchestration Rules
orchestration:
  execution_strategy: "sequential_with_parallel"
  dependency_resolution: "automatic"
  state_management: "persistent"
  error_handling: "{{ .ErrorHandling }}"
  resource_optimization: "adaptive"
  monitoring: "real_time"

# Step Management
step_management:
  max_concurrent_steps: {{ .MaxConcurrency }}
  step_timeout: {{ .Timeout }}
  retry_configuration:
    max_attempts: {{ .RetryAttempts }}
    delay_seconds: {{ .RetryDelay }}
    backoff_strategy: "exponential"
  checkpoint_frequency: 30

# State Persistence
state_persistence:
  enabled: {{ .StatePersistence }}
  storage_type: "file_based"
  storage_path: "memory/{{ .Name }}/workflow_state"
  checkpoint_format: "json"
  cleanup_policy: "after_completion"

# Error Handling Strategies
error_handling:
  step_failure:
    action: "{{ .ErrorHandling }}"
    retry_attempts: {{ .RetryAttempts }}
    retry_delay: {{ .RetryDelay }}
  workflow_failure:
    action: "stop_workflow"
    cleanup: true
    state_preservation: true
  cascade_failure:
    action: "stop_dependent_steps"
    notification: true

# Resource Management
resource_management:
  cpu_limit: "{{ .ResourceLimits.CPU }}"
  memory_limit: "{{ .ResourceLimits.Memory }}"
  storage_limit: "{{ .ResourceLimits.Storage }}"
  network_limit: "{{ .ResourceLimits.Network }}"
  adaptive_scaling: true
  resource_monitoring: true

# Monitoring and Logging
monitoring:
  enabled: {{ .Monitoring }}
  metrics:
    - "step_execution_time"
    - "step_success_rate"
    - "resource_usage"
    - "workflow_progress"
    - "error_frequency"
  logging:
    level: "{{ .Logging }}"
    format: "structured"
    output: "file_and_console"
  alerting:
    enabled: true
    thresholds:
      step_timeout: {{ .Timeout }}
      error_rate: 0.1
      resource_usage: 0.8

# Workflow Steps Configuration
steps:
{{- range $index, $step := .StepsConfig }}
  {{ $step.Name }}:
    type: "{{ $step.Type }}"
    description: "{{ $step.Description }}"
    dependencies: {{ $step.Dependencies }}
    timeout: {{ $step.Timeout }}
    retry_attempts: {{ $step.RetryAttempts }}
    parallel: {{ $step.Parallel }}
    condition: "{{ $step.Condition }}"
    error_handling: "{{ $step.ErrorHandling }}"
    resources:
      cpu: "{{ $step.Resources.CPU }}"
      memory: "{{ $step.Resources.Memory }}"
      storage: "{{ $step.Resources.Storage }}"
      network: "{{ $step.Resources.Network }}"
{{- end }}

# Business Rules
business_rules:
  - "always_maintain_workflow_state"
  - "respect_step_dependencies"
  - "handle_errors_gracefully"
  - "optimize_resource_usage"
  - "ensure_data_consistency"
  - "provide_progress_visibility"
  - "support_workflow_resumption"
  - "maintain_audit_trail"

# Security and Privacy
security:
  data_encryption: true
  access_control: true
  audit_logging: true
  tenant_isolation: true
  data_retention: "30_days"

# Performance Optimization
performance:
  parallel_execution: true
  resource_pooling: true
  caching_strategy: "adaptive"
  load_balancing: true
  auto_scaling: true
