=== RUN   TestAgentGeneratorTestSuite
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigBusinessRules
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigBusinessRules/business_rules_TestAgent1
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigBusinessRules/business_rules_TestAgent2
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigCapabilities
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigCapabilities/capabilities_TestAgent1
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigCapabilities/capabilities_TestAgent2
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigCreation
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigCreation/config_TestAgent1
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigCreation/config_TestAgent2
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigDefaults
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigLimitations
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigLimitations/limitations_TestAgent1
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigLimitations/limitations_TestAgent2
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigSecurity
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigSecurity/security_TestAgent1
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigSecurity/security_TestAgent2
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_web_search
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_web_search
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_database
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_database
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_api
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_api
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_file_system
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_file_system
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_email
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_email
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_web_search_database
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_web_search_database
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_api_email
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_api_email
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_file_system_api_database
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_file_system_api_database
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/invalid_tools_invalid_tool
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/invalid_tools_web_search_invalid_tool
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/invalid_tools_database_invalid_tool_api
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/invalid_memory_invalid_memory
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/invalid_memory_
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/invalid_memory_memory
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidation/invalid_memory_episodic_memory
=== RUN   TestAgentGeneratorTestSuite/TestAgentConfigValidationEdgeCases
=== RUN   TestAgentGeneratorTestSuite/TestAgentNameValidation
=== RUN   TestAgentGeneratorTestSuite/TestAgentNameValidation/valid_SupportBot
=== RUN   TestAgentGeneratorTestSuite/TestAgentNameValidation/valid_EmailBot
=== RUN   TestAgentGeneratorTestSuite/TestAgentNameValidation/valid_FileBot
=== RUN   TestAgentGeneratorTestSuite/TestAgentNameValidation/valid_test_agent
=== RUN   TestAgentGeneratorTestSuite/TestAgentNameValidation/valid_agent-123
=== RUN   TestAgentGeneratorTestSuite/TestAgentNameValidation/valid_MyAgent
=== RUN   TestAgentGeneratorTestSuite/TestAgentNameValidation/invalid_
=== RUN   TestAgentGeneratorTestSuite/TestAgentNameValidation/invalid_a
=== RUN   TestAgentGeneratorTestSuite/TestAgentNameValidation/invalid_invalid_name_with_spaces
=== RUN   TestAgentGeneratorTestSuite/TestAgentNameValidation/invalid_invalid-name-with-special-chars!@#
=== RUN   TestAgentGeneratorTestSuite/TestAgentNameValidation/invalid_invalid/name/with/slashes
=== RUN   TestAgentGeneratorTestSuite/TestAgentNameValidation/invalid_invalid\name\with\backslashes
=== RUN   TestAgentGeneratorTestSuite/TestMemoryTypeValidation
=== RUN   TestAgentGeneratorTestSuite/TestMemoryTypeValidation/valid_episodic
=== RUN   TestAgentGeneratorTestSuite/TestMemoryTypeValidation/valid_none
=== RUN   TestAgentGeneratorTestSuite/TestMemoryTypeValidation/invalid_invalid_memory
=== RUN   TestAgentGeneratorTestSuite/TestMemoryTypeValidation/invalid_
=== RUN   TestAgentGeneratorTestSuite/TestMemoryTypeValidation/invalid_memory
=== RUN   TestAgentGeneratorTestSuite/TestMemoryTypeValidation/invalid_episodic_memory
=== RUN   TestAgentGeneratorTestSuite/TestToolStructure
=== RUN   TestAgentGeneratorTestSuite/TestToolStructure/tool_web_search
=== RUN   TestAgentGeneratorTestSuite/TestToolStructure/tool_database
=== RUN   TestAgentGeneratorTestSuite/TestToolStructure/tool_api
=== RUN   TestAgentGeneratorTestSuite/TestToolStructure/tool_file_system
=== RUN   TestAgentGeneratorTestSuite/TestToolStructure/tool_email
--- PASS: TestAgentGeneratorTestSuite (0.00s)
    --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigBusinessRules (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigBusinessRules/business_rules_TestAgent1 (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigBusinessRules/business_rules_TestAgent2 (0.00s)
    --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigCapabilities (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigCapabilities/capabilities_TestAgent1 (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigCapabilities/capabilities_TestAgent2 (0.00s)
    --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigCreation (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigCreation/config_TestAgent1 (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigCreation/config_TestAgent2 (0.00s)
    --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigDefaults (0.00s)
    --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigLimitations (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigLimitations/limitations_TestAgent1 (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigLimitations/limitations_TestAgent2 (0.00s)
    --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigSecurity (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigSecurity/security_TestAgent1 (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigSecurity/security_TestAgent2 (0.00s)
    --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_web_search (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_web_search (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_database (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_database (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_api (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_api (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_file_system (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_file_system (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_email (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_email (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_web_search_database (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_web_search_database (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_api_email (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_api_email (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_file_system_api_database (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_file_system_api_database (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_episodic_ (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/valid_none_ (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/invalid_tools_invalid_tool (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/invalid_tools_web_search_invalid_tool (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/invalid_tools_database_invalid_tool_api (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/invalid_memory_invalid_memory (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/invalid_memory_ (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/invalid_memory_memory (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidation/invalid_memory_episodic_memory (0.00s)
    --- PASS: TestAgentGeneratorTestSuite/TestAgentConfigValidationEdgeCases (0.00s)
    --- PASS: TestAgentGeneratorTestSuite/TestAgentNameValidation (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentNameValidation/valid_SupportBot (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentNameValidation/valid_EmailBot (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentNameValidation/valid_FileBot (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentNameValidation/valid_test_agent (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentNameValidation/valid_agent-123 (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentNameValidation/valid_MyAgent (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentNameValidation/invalid_ (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentNameValidation/invalid_a (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentNameValidation/invalid_invalid_name_with_spaces (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentNameValidation/invalid_invalid-name-with-special-chars!@# (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentNameValidation/invalid_invalid/name/with/slashes (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestAgentNameValidation/invalid_invalid\name\with\backslashes (0.00s)
    --- PASS: TestAgentGeneratorTestSuite/TestMemoryTypeValidation (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestMemoryTypeValidation/valid_episodic (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestMemoryTypeValidation/valid_none (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestMemoryTypeValidation/invalid_invalid_memory (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestMemoryTypeValidation/invalid_ (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestMemoryTypeValidation/invalid_memory (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestMemoryTypeValidation/invalid_episodic_memory (0.00s)
    --- PASS: TestAgentGeneratorTestSuite/TestToolStructure (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestToolStructure/tool_web_search (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestToolStructure/tool_database (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestToolStructure/tool_api (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestToolStructure/tool_file_system (0.00s)
        --- PASS: TestAgentGeneratorTestSuite/TestToolStructure/tool_email (0.00s)
=== RUN   TestCLICommandsTestSuite
=== RUN   TestCLICommandsTestSuite/TestAgentCommandExecution
=== RUN   TestCLICommandsTestSuite/TestAgentCommandExecution/successful_execution
{"level":"INFO","timestamp":"2025-08-15T22:06:53.213+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"TestAgent","tools":["web_search"],"memory":"episodic","name":"TestAgent","tools":["web_search"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.213+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.213+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.214+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/TestAgent/testagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.214+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.214+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/TestAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.215+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.215+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"web_search","path":"tools/TestAgent/web_search.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.215+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["web_search"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.215+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.215+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/TestAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.215+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.215+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/TestAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.215+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/TestAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"TestAgent","tools":["web_search"],"memory":"episodic","name":"TestAgent","tools":["web_search"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/TestAgent/
  ├── 📄 TestAgent.ctx
  ├── 📁 memory/TestAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/TestAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/TestAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/TestAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test TestAgent
   ctx test --behavior --component=TestAgent

2️⃣  Start a conversation:
   ctx run TestAgent "Hello, can you help me?"
   ctx run TestAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/TestAgent/TestAgent.ctx
   
   # Modify prompts
   nano prompts/TestAgent/agent_response.md
   
   # Add custom tools
   nano tools/TestAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=TestAgent
   
   # View behavior reports
   cat tests/reports/behavior_TestAgent.json

📚 Configuration Details:
   • Tools: web_search
   • Memory: episodic
   • Context: contexts/TestAgent/TestAgent.ctx
   • Memory Config: memory/TestAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandExecution/missing_tools_flag
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"TestAgent","tools":["web_search"],"memory":"episodic","name":"TestAgent","tools":["web_search"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/TestAgent/testagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/TestAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"web_search","path":"tools/TestAgent/web_search.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["web_search"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/TestAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/TestAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/TestAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.216+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"TestAgent","tools":["web_search"],"memory":"episodic","name":"TestAgent","tools":["web_search"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/TestAgent/
  ├── 📄 TestAgent.ctx
  ├── 📁 memory/TestAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/TestAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/TestAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/TestAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test TestAgent
   ctx test --behavior --component=TestAgent

2️⃣  Start a conversation:
   ctx run TestAgent "Hello, can you help me?"
   ctx run TestAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/TestAgent/TestAgent.ctx
   
   # Modify prompts
   nano prompts/TestAgent/agent_response.md
   
   # Add custom tools
   nano tools/TestAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=TestAgent
   
   # View behavior reports
   cat tests/reports/behavior_TestAgent.json

📚 Configuration Details:
   • Tools: web_search
   • Memory: episodic
   • Context: contexts/TestAgent/TestAgent.ctx
   • Memory Config: memory/TestAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandExecution/missing_memory_flag
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"TestAgent","tools":["web_search"],"memory":"episodic","name":"TestAgent","tools":["web_search"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/TestAgent/testagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/TestAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"web_search","path":"tools/TestAgent/web_search.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["web_search"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/TestAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/TestAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/TestAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"TestAgent","tools":["web_search"],"memory":"episodic","name":"TestAgent","tools":["web_search"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/TestAgent/
  ├── 📄 TestAgent.ctx
  ├── 📁 memory/TestAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/TestAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/TestAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/TestAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test TestAgent
   ctx test --behavior --component=TestAgent

2️⃣  Start a conversation:
   ctx run TestAgent "Hello, can you help me?"
   ctx run TestAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/TestAgent/TestAgent.ctx
   
   # Modify prompts
   nano prompts/TestAgent/agent_response.md
   
   # Add custom tools
   nano tools/TestAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=TestAgent
   
   # View behavior reports
   cat tests/reports/behavior_TestAgent.json

📚 Configuration Details:
   • Tools: web_search
   • Memory: episodic
   • Context: contexts/TestAgent/TestAgent.ctx
   • Memory Config: memory/TestAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation
=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_web_search
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"TestAgent","tools":["web_search"],"memory":"episodic","name":"TestAgent","tools":["web_search"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.217+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/TestAgent/testagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/TestAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"web_search","path":"tools/TestAgent/web_search.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["web_search"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/TestAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/TestAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/TestAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"TestAgent","tools":["web_search"],"memory":"episodic","name":"TestAgent","tools":["web_search"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/TestAgent/
  ├── 📄 TestAgent.ctx
  ├── 📁 memory/TestAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/TestAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/TestAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/TestAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test TestAgent
   ctx test --behavior --component=TestAgent

2️⃣  Start a conversation:
   ctx run TestAgent "Hello, can you help me?"
   ctx run TestAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/TestAgent/TestAgent.ctx
   
   # Modify prompts
   nano prompts/TestAgent/agent_response.md
   
   # Add custom tools
   nano tools/TestAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=TestAgent
   
   # View behavior reports
   cat tests/reports/behavior_TestAgent.json

📚 Configuration Details:
   • Tools: web_search
   • Memory: episodic
   • Context: contexts/TestAgent/TestAgent.ctx
   • Memory Config: memory/TestAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_database
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"TestAgent","tools":["database"],"memory":"episodic","name":"TestAgent","tools":["database"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/TestAgent/testagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/TestAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.218+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.219+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"database","path":"tools/TestAgent/database.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.219+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["database"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.219+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.219+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/TestAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.219+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.219+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/TestAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.219+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.219+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/TestAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.219+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"TestAgent","tools":["database"],"memory":"episodic","name":"TestAgent","tools":["database"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/TestAgent/
  ├── 📄 TestAgent.ctx
  ├── 📁 memory/TestAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/TestAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/TestAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/TestAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test TestAgent
   ctx test --behavior --component=TestAgent

2️⃣  Start a conversation:
   ctx run TestAgent "Hello, can you help me?"
   ctx run TestAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/TestAgent/TestAgent.ctx
   
   # Modify prompts
   nano prompts/TestAgent/agent_response.md
   
   # Add custom tools
   nano tools/TestAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=TestAgent
   
   # View behavior reports
   cat tests/reports/behavior_TestAgent.json

📚 Configuration Details:
   • Tools: database
   • Memory: episodic
   • Context: contexts/TestAgent/TestAgent.ctx
   • Memory Config: memory/TestAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_api
{"level":"INFO","timestamp":"2025-08-15T22:06:53.219+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"TestAgent","tools":["api"],"memory":"episodic","name":"TestAgent","tools":["api"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.219+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.219+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.220+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/TestAgent/testagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.220+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.220+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/TestAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.220+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.220+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"api","path":"tools/TestAgent/api.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.220+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["api"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.220+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.220+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/TestAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.220+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.220+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/TestAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.220+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.221+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/TestAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.221+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"TestAgent","tools":["api"],"memory":"episodic","name":"TestAgent","tools":["api"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/TestAgent/
  ├── 📄 TestAgent.ctx
  ├── 📁 memory/TestAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/TestAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/TestAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/TestAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test TestAgent
   ctx test --behavior --component=TestAgent

2️⃣  Start a conversation:
   ctx run TestAgent "Hello, can you help me?"
   ctx run TestAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/TestAgent/TestAgent.ctx
   
   # Modify prompts
   nano prompts/TestAgent/agent_response.md
   
   # Add custom tools
   nano tools/TestAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=TestAgent
   
   # View behavior reports
   cat tests/reports/behavior_TestAgent.json

📚 Configuration Details:
   • Tools: api
   • Memory: episodic
   • Context: contexts/TestAgent/TestAgent.ctx
   • Memory Config: memory/TestAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_file_system
{"level":"INFO","timestamp":"2025-08-15T22:06:53.221+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"TestAgent","tools":["file_system"],"memory":"episodic","name":"TestAgent","tools":["file_system"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.221+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.221+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.221+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/TestAgent/testagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.221+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.221+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/TestAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.221+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.221+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"file_system","path":"tools/TestAgent/file_system.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.221+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["file_system"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.221+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/TestAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/TestAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/TestAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"TestAgent","tools":["file_system"],"memory":"episodic","name":"TestAgent","tools":["file_system"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/TestAgent/
  ├── 📄 TestAgent.ctx
  ├── 📁 memory/TestAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/TestAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/TestAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/TestAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test TestAgent
   ctx test --behavior --component=TestAgent

2️⃣  Start a conversation:
   ctx run TestAgent "Hello, can you help me?"
   ctx run TestAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/TestAgent/TestAgent.ctx
   
   # Modify prompts
   nano prompts/TestAgent/agent_response.md
   
   # Add custom tools
   nano tools/TestAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=TestAgent
   
   # View behavior reports
   cat tests/reports/behavior_TestAgent.json

📚 Configuration Details:
   • Tools: file_system
   • Memory: episodic
   • Context: contexts/TestAgent/TestAgent.ctx
   • Memory Config: memory/TestAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_email
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"TestAgent","tools":["email"],"memory":"episodic","name":"TestAgent","tools":["email"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/TestAgent/testagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/TestAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"email","path":"tools/TestAgent/email.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["email"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.222+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.223+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/TestAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.223+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.223+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/TestAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.223+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.223+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/TestAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.223+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"TestAgent","tools":["email"],"memory":"episodic","name":"TestAgent","tools":["email"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/TestAgent/
  ├── 📄 TestAgent.ctx
  ├── 📁 memory/TestAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/TestAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/TestAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/TestAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test TestAgent
   ctx test --behavior --component=TestAgent

2️⃣  Start a conversation:
   ctx run TestAgent "Hello, can you help me?"
   ctx run TestAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/TestAgent/TestAgent.ctx
   
   # Modify prompts
   nano prompts/TestAgent/agent_response.md
   
   # Add custom tools
   nano tools/TestAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=TestAgent
   
   # View behavior reports
   cat tests/reports/behavior_TestAgent.json

📚 Configuration Details:
   • Tools: email
   • Memory: episodic
   • Context: contexts/TestAgent/TestAgent.ctx
   • Memory Config: memory/TestAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_web_search,database
{"level":"INFO","timestamp":"2025-08-15T22:06:53.223+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"TestAgent","tools":["web_search","database"],"memory":"episodic","name":"TestAgent","tools":["web_search","database"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.223+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.223+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.223+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/TestAgent/testagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.223+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.223+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/TestAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.223+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.223+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"web_search","path":"tools/TestAgent/web_search.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"database","path":"tools/TestAgent/database.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["web_search","database"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/TestAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/TestAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/TestAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"TestAgent","tools":["web_search","database"],"memory":"episodic","name":"TestAgent","tools":["web_search","database"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/TestAgent/
  ├── 📄 TestAgent.ctx
  ├── 📁 memory/TestAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/TestAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/TestAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/TestAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test TestAgent
   ctx test --behavior --component=TestAgent

2️⃣  Start a conversation:
   ctx run TestAgent "Hello, can you help me?"
   ctx run TestAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/TestAgent/TestAgent.ctx
   
   # Modify prompts
   nano prompts/TestAgent/agent_response.md
   
   # Add custom tools
   nano tools/TestAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=TestAgent
   
   # View behavior reports
   cat tests/reports/behavior_TestAgent.json

📚 Configuration Details:
   • Tools: web_search, database
   • Memory: episodic
   • Context: contexts/TestAgent/TestAgent.ctx
   • Memory Config: memory/TestAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_api,email
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"TestAgent","tools":["api","email"],"memory":"episodic","name":"TestAgent","tools":["api","email"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/TestAgent/testagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/TestAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.224+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"api","path":"tools/TestAgent/api.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"email","path":"tools/TestAgent/email.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["api","email"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/TestAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/TestAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/TestAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"TestAgent","tools":["api","email"],"memory":"episodic","name":"TestAgent","tools":["api","email"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/TestAgent/
  ├── 📄 TestAgent.ctx
  ├── 📁 memory/TestAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/TestAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/TestAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/TestAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test TestAgent
   ctx test --behavior --component=TestAgent

2️⃣  Start a conversation:
   ctx run TestAgent "Hello, can you help me?"
   ctx run TestAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/TestAgent/TestAgent.ctx
   
   # Modify prompts
   nano prompts/TestAgent/agent_response.md
   
   # Add custom tools
   nano tools/TestAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=TestAgent
   
   # View behavior reports
   cat tests/reports/behavior_TestAgent.json

📚 Configuration Details:
   • Tools: api, email
   • Memory: episodic
   • Context: contexts/TestAgent/TestAgent.ctx
   • Memory Config: memory/TestAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_file_system,api,database
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"TestAgent","tools":["file_system","api","database"],"memory":"episodic","name":"TestAgent","tools":["file_system","api","database"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/TestAgent/testagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/TestAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.225+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"file_system","path":"tools/TestAgent/file_system.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"api","path":"tools/TestAgent/api.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"database","path":"tools/TestAgent/database.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["file_system","api","database"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/TestAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/TestAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/TestAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"TestAgent","tools":["file_system","api","database"],"memory":"episodic","name":"TestAgent","tools":["file_system","api","database"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/TestAgent/
  ├── 📄 TestAgent.ctx
  ├── 📁 memory/TestAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/TestAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/TestAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/TestAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test TestAgent
   ctx test --behavior --component=TestAgent

2️⃣  Start a conversation:
   ctx run TestAgent "Hello, can you help me?"
   ctx run TestAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/TestAgent/TestAgent.ctx
   
   # Modify prompts
   nano prompts/TestAgent/agent_response.md
   
   # Add custom tools
   nano tools/TestAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=TestAgent
   
   # View behavior reports
   cat tests/reports/behavior_TestAgent.json

📚 Configuration Details:
   • Tools: file_system, api, database
   • Memory: episodic
   • Context: contexts/TestAgent/TestAgent.ctx
   • Memory Config: memory/TestAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_
{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"TestAgent","tools":[],"memory":"episodic","name":"TestAgent","tools":[],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/TestAgent/testagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.226+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.227+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/TestAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.227+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.227+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":[]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.227+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.227+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/TestAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.227+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.227+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/TestAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.227+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.227+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/TestAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.227+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"TestAgent","tools":[],"memory":"episodic","name":"TestAgent","tools":[],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/TestAgent/
  ├── 📄 TestAgent.ctx
  ├── 📁 memory/TestAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/TestAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/TestAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/TestAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test TestAgent
   ctx test --behavior --component=TestAgent

2️⃣  Start a conversation:
   ctx run TestAgent "Hello, can you help me?"
   ctx run TestAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/TestAgent/TestAgent.ctx
   
   # Modify prompts
   nano prompts/TestAgent/agent_response.md
   
   # Add custom tools
   nano tools/TestAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=TestAgent
   
   # View behavior reports
   cat tests/reports/behavior_TestAgent.json

📚 Configuration Details:
   • Tools: 
   • Memory: episodic
   • Context: contexts/TestAgent/TestAgent.ctx
   • Memory Config: memory/TestAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/invalid_tools_invalid_tool
{"level":"ERROR","timestamp":"2025-08-15T22:06:53.227+0800","caller":"commands/agent_generator.go:72","msg":"agent configuration validation failed","error":"invalid tool 'invalid_tool'. Valid tools: web_search, database, api, file_system, email","stacktrace":"github.com/contexis-cmp/contexis/src/cli/commands.GenerateAgent\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/src/cli/commands/agent_generator.go:72\ngithub.com/contexis-cmp/contexis/src/cli/commands.GetAgentCommand.func1\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/src/cli/commands/cli_commands.go:66\ngithub.com/spf13/cobra.(*Command).execute\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:940\ngithub.com/spf13/cobra.(*Command).ExecuteC\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:1068\ngithub.com/spf13/cobra.(*Command).Execute\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:992\ngithub.com/contexis-cmp/contexis/tests/unit.(*CLICommandsTestSuite).TestAgentCommandFlagValidation.func2\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/tests/unit/cli_commands_test.go:149\ntesting.tRunner\n\t/Users/jedfordseculles/.local/share/mise/installs/go/1.24.6/src/testing/testing.go:1792"}
Error: invalid agent configuration: invalid tool 'invalid_tool'. Valid tools: web_search, database, api, file_system, email
Usage:
  agent [flags]

Flags:
  -h, --help            help for agent
  -m, --memory string   Memory type (episodic,none) (default "episodic")
  -t, --tools string    Comma-separated list of tools (web_search,database,api,file_system,email)

=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/invalid_tools_web_search,invalid_tool
{"level":"ERROR","timestamp":"2025-08-15T22:06:53.227+0800","caller":"commands/agent_generator.go:72","msg":"agent configuration validation failed","error":"invalid tool 'invalid_tool'. Valid tools: web_search, database, api, file_system, email","stacktrace":"github.com/contexis-cmp/contexis/src/cli/commands.GenerateAgent\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/src/cli/commands/agent_generator.go:72\ngithub.com/contexis-cmp/contexis/src/cli/commands.GetAgentCommand.func1\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/src/cli/commands/cli_commands.go:66\ngithub.com/spf13/cobra.(*Command).execute\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:940\ngithub.com/spf13/cobra.(*Command).ExecuteC\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:1068\ngithub.com/spf13/cobra.(*Command).Execute\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:992\ngithub.com/contexis-cmp/contexis/tests/unit.(*CLICommandsTestSuite).TestAgentCommandFlagValidation.func2\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/tests/unit/cli_commands_test.go:149\ntesting.tRunner\n\t/Users/jedfordseculles/.local/share/mise/installs/go/1.24.6/src/testing/testing.go:1792"}
Error: invalid agent configuration: invalid tool 'invalid_tool'. Valid tools: web_search, database, api, file_system, email
Usage:
  agent [flags]

Flags:
  -h, --help            help for agent
  -m, --memory string   Memory type (episodic,none) (default "episodic")
  -t, --tools string    Comma-separated list of tools (web_search,database,api,file_system,email)

=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/invalid_tools_database,invalid_tool,api
{"level":"ERROR","timestamp":"2025-08-15T22:06:53.227+0800","caller":"commands/agent_generator.go:72","msg":"agent configuration validation failed","error":"invalid tool 'invalid_tool'. Valid tools: web_search, database, api, file_system, email","stacktrace":"github.com/contexis-cmp/contexis/src/cli/commands.GenerateAgent\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/src/cli/commands/agent_generator.go:72\ngithub.com/contexis-cmp/contexis/src/cli/commands.GetAgentCommand.func1\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/src/cli/commands/cli_commands.go:66\ngithub.com/spf13/cobra.(*Command).execute\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:940\ngithub.com/spf13/cobra.(*Command).ExecuteC\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:1068\ngithub.com/spf13/cobra.(*Command).Execute\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:992\ngithub.com/contexis-cmp/contexis/tests/unit.(*CLICommandsTestSuite).TestAgentCommandFlagValidation.func2\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/tests/unit/cli_commands_test.go:149\ntesting.tRunner\n\t/Users/jedfordseculles/.local/share/mise/installs/go/1.24.6/src/testing/testing.go:1792"}
Error: invalid agent configuration: invalid tool 'invalid_tool'. Valid tools: web_search, database, api, file_system, email
Usage:
  agent [flags]

Flags:
  -h, --help            help for agent
  -m, --memory string   Memory type (episodic,none) (default "episodic")
  -t, --tools string    Comma-separated list of tools (web_search,database,api,file_system,email)

=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_memory_episodic
{"level":"INFO","timestamp":"2025-08-15T22:06:53.227+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"TestAgent","tools":["web_search"],"memory":"episodic","name":"TestAgent","tools":["web_search"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.227+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.227+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/TestAgent/testagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/TestAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"web_search","path":"tools/TestAgent/web_search.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["web_search"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/TestAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/TestAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/TestAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"TestAgent","tools":["web_search"],"memory":"episodic","name":"TestAgent","tools":["web_search"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/TestAgent/
  ├── 📄 TestAgent.ctx
  ├── 📁 memory/TestAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/TestAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/TestAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/TestAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test TestAgent
   ctx test --behavior --component=TestAgent

2️⃣  Start a conversation:
   ctx run TestAgent "Hello, can you help me?"
   ctx run TestAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/TestAgent/TestAgent.ctx
   
   # Modify prompts
   nano prompts/TestAgent/agent_response.md
   
   # Add custom tools
   nano tools/TestAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=TestAgent
   
   # View behavior reports
   cat tests/reports/behavior_TestAgent.json

📚 Configuration Details:
   • Tools: web_search
   • Memory: episodic
   • Context: contexts/TestAgent/TestAgent.ctx
   • Memory Config: memory/TestAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_memory_none
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"TestAgent","tools":["web_search"],"memory":"none","name":"TestAgent","tools":["web_search"],"memory":"none"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.228+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.229+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/TestAgent/testagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.229+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.229+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/TestAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.229+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.229+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"web_search","path":"tools/TestAgent/web_search.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.229+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["web_search"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.229+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.229+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/TestAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.229+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.229+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/TestAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.229+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.229+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/TestAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.229+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"TestAgent","tools":["web_search"],"memory":"none","name":"TestAgent","tools":["web_search"],"memory":"none"}

🤖 Generated Agent Structure:
  contexts/TestAgent/
  ├── 📄 TestAgent.ctx
  ├── 📁 memory/TestAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/TestAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/TestAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/TestAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test TestAgent
   ctx test --behavior --component=TestAgent

2️⃣  Start a conversation:
   ctx run TestAgent "Hello, can you help me?"
   ctx run TestAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/TestAgent/TestAgent.ctx
   
   # Modify prompts
   nano prompts/TestAgent/agent_response.md
   
   # Add custom tools
   nano tools/TestAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=TestAgent
   
   # View behavior reports
   cat tests/reports/behavior_TestAgent.json

📚 Configuration Details:
   • Tools: web_search
   • Memory: none
   • Context: contexts/TestAgent/TestAgent.ctx
   • Memory Config: memory/TestAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/invalid_memory_invalid_memory
{"level":"ERROR","timestamp":"2025-08-15T22:06:53.229+0800","caller":"commands/agent_generator.go:72","msg":"agent configuration validation failed","error":"invalid memory type 'invalid_memory'. Valid types: episodic, none","stacktrace":"github.com/contexis-cmp/contexis/src/cli/commands.GenerateAgent\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/src/cli/commands/agent_generator.go:72\ngithub.com/contexis-cmp/contexis/src/cli/commands.GetAgentCommand.func1\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/src/cli/commands/cli_commands.go:66\ngithub.com/spf13/cobra.(*Command).execute\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:940\ngithub.com/spf13/cobra.(*Command).ExecuteC\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:1068\ngithub.com/spf13/cobra.(*Command).Execute\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:992\ngithub.com/contexis-cmp/contexis/tests/unit.(*CLICommandsTestSuite).TestAgentCommandFlagValidation.func4\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/tests/unit/cli_commands_test.go:170\ntesting.tRunner\n\t/Users/jedfordseculles/.local/share/mise/installs/go/1.24.6/src/testing/testing.go:1792"}
Error: invalid agent configuration: invalid memory type 'invalid_memory'. Valid types: episodic, none
Usage:
  agent [flags]

Flags:
  -h, --help            help for agent
  -m, --memory string   Memory type (episodic,none) (default "episodic")
  -t, --tools string    Comma-separated list of tools (web_search,database,api,file_system,email)

=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/invalid_memory_memory
{"level":"ERROR","timestamp":"2025-08-15T22:06:53.230+0800","caller":"commands/agent_generator.go:72","msg":"agent configuration validation failed","error":"invalid memory type 'memory'. Valid types: episodic, none","stacktrace":"github.com/contexis-cmp/contexis/src/cli/commands.GenerateAgent\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/src/cli/commands/agent_generator.go:72\ngithub.com/contexis-cmp/contexis/src/cli/commands.GetAgentCommand.func1\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/src/cli/commands/cli_commands.go:66\ngithub.com/spf13/cobra.(*Command).execute\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:940\ngithub.com/spf13/cobra.(*Command).ExecuteC\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:1068\ngithub.com/spf13/cobra.(*Command).Execute\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:992\ngithub.com/contexis-cmp/contexis/tests/unit.(*CLICommandsTestSuite).TestAgentCommandFlagValidation.func4\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/tests/unit/cli_commands_test.go:170\ntesting.tRunner\n\t/Users/jedfordseculles/.local/share/mise/installs/go/1.24.6/src/testing/testing.go:1792"}
Error: invalid agent configuration: invalid memory type 'memory'. Valid types: episodic, none
Usage:
  agent [flags]

Flags:
  -h, --help            help for agent
  -m, --memory string   Memory type (episodic,none) (default "episodic")
  -t, --tools string    Comma-separated list of tools (web_search,database,api,file_system,email)

=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlagValidation/invalid_memory_episodic_memory
{"level":"ERROR","timestamp":"2025-08-15T22:06:53.230+0800","caller":"commands/agent_generator.go:72","msg":"agent configuration validation failed","error":"invalid memory type 'episodic_memory'. Valid types: episodic, none","stacktrace":"github.com/contexis-cmp/contexis/src/cli/commands.GenerateAgent\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/src/cli/commands/agent_generator.go:72\ngithub.com/contexis-cmp/contexis/src/cli/commands.GetAgentCommand.func1\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/src/cli/commands/cli_commands.go:66\ngithub.com/spf13/cobra.(*Command).execute\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:940\ngithub.com/spf13/cobra.(*Command).ExecuteC\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:1068\ngithub.com/spf13/cobra.(*Command).Execute\n\t/Users/jedfordseculles/go/pkg/mod/github.com/spf13/cobra@v1.7.0/command.go:992\ngithub.com/contexis-cmp/contexis/tests/unit.(*CLICommandsTestSuite).TestAgentCommandFlagValidation.func4\n\t/Users/jedfordseculles/Projects/cmp-concepts/contexis/tests/unit/cli_commands_test.go:170\ntesting.tRunner\n\t/Users/jedfordseculles/.local/share/mise/installs/go/1.24.6/src/testing/testing.go:1792"}
Error: invalid agent configuration: invalid memory type 'episodic_memory'. Valid types: episodic, none
Usage:
  agent [flags]

Flags:
  -h, --help            help for agent
  -m, --memory string   Memory type (episodic,none) (default "episodic")
  -t, --tools string    Comma-separated list of tools (web_search,database,api,file_system,email)

=== RUN   TestCLICommandsTestSuite/TestAgentCommandFlags
=== RUN   TestCLICommandsTestSuite/TestAgentCommandStructure
=== RUN   TestCLICommandsTestSuite/TestAgentCommandValidation
=== RUN   TestCLICommandsTestSuite/TestAgentCommandValidation/valid_name_SupportBot
{"level":"INFO","timestamp":"2025-08-15T22:06:53.230+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"SupportBot","tools":["web_search"],"memory":"episodic","name":"SupportBot","tools":["web_search"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.230+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.230+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.230+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/SupportBot/supportbot.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.230+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.230+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/SupportBot/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.230+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.231+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"web_search","path":"tools/SupportBot/web_search.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.231+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["web_search"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.231+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.231+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/SupportBot/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.231+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.231+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/SupportBot/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.231+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.231+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/SupportBot/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.231+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"SupportBot","tools":["web_search"],"memory":"episodic","name":"SupportBot","tools":["web_search"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/SupportBot/
  ├── 📄 SupportBot.ctx
  ├── 📁 memory/SupportBot/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/SupportBot/
  │   └── 📄 agent_response.md
  ├── 📁 tools/SupportBot/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/SupportBot/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test SupportBot
   ctx test --behavior --component=SupportBot

2️⃣  Start a conversation:
   ctx run SupportBot "Hello, can you help me?"
   ctx run SupportBot "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/SupportBot/SupportBot.ctx
   
   # Modify prompts
   nano prompts/SupportBot/agent_response.md
   
   # Add custom tools
   nano tools/SupportBot/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=SupportBot
   
   # View behavior reports
   cat tests/reports/behavior_SupportBot.json

📚 Configuration Details:
   • Tools: web_search
   • Memory: episodic
   • Context: contexts/SupportBot/SupportBot.ctx
   • Memory Config: memory/SupportBot/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandValidation/valid_name_EmailBot
{"level":"INFO","timestamp":"2025-08-15T22:06:53.231+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"EmailBot","tools":["web_search"],"memory":"episodic","name":"EmailBot","tools":["web_search"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.231+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.231+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.231+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/EmailBot/emailbot.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.231+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/EmailBot/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"web_search","path":"tools/EmailBot/web_search.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["web_search"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/EmailBot/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/EmailBot/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/EmailBot/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"EmailBot","tools":["web_search"],"memory":"episodic","name":"EmailBot","tools":["web_search"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/EmailBot/
  ├── 📄 EmailBot.ctx
  ├── 📁 memory/EmailBot/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/EmailBot/
  │   └── 📄 agent_response.md
  ├── 📁 tools/EmailBot/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/EmailBot/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test EmailBot
   ctx test --behavior --component=EmailBot

2️⃣  Start a conversation:
   ctx run EmailBot "Hello, can you help me?"
   ctx run EmailBot "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/EmailBot/EmailBot.ctx
   
   # Modify prompts
   nano prompts/EmailBot/agent_response.md
   
   # Add custom tools
   nano tools/EmailBot/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=EmailBot
   
   # View behavior reports
   cat tests/reports/behavior_EmailBot.json

📚 Configuration Details:
   • Tools: web_search
   • Memory: episodic
   • Context: contexts/EmailBot/EmailBot.ctx
   • Memory Config: memory/EmailBot/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandValidation/valid_name_FileBot
{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"FileBot","tools":["web_search"],"memory":"episodic","name":"FileBot","tools":["web_search"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.232+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/FileBot/filebot.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.233+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.233+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/FileBot/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.233+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.233+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"web_search","path":"tools/FileBot/web_search.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.233+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["web_search"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.233+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.233+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/FileBot/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.233+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.233+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/FileBot/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.233+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.233+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/FileBot/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.233+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"FileBot","tools":["web_search"],"memory":"episodic","name":"FileBot","tools":["web_search"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/FileBot/
  ├── 📄 FileBot.ctx
  ├── 📁 memory/FileBot/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/FileBot/
  │   └── 📄 agent_response.md
  ├── 📁 tools/FileBot/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/FileBot/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test FileBot
   ctx test --behavior --component=FileBot

2️⃣  Start a conversation:
   ctx run FileBot "Hello, can you help me?"
   ctx run FileBot "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/FileBot/FileBot.ctx
   
   # Modify prompts
   nano prompts/FileBot/agent_response.md
   
   # Add custom tools
   nano tools/FileBot/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=FileBot
   
   # View behavior reports
   cat tests/reports/behavior_FileBot.json

📚 Configuration Details:
   • Tools: web_search
   • Memory: episodic
   • Context: contexts/FileBot/FileBot.ctx
   • Memory Config: memory/FileBot/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandValidation/valid_name_test_agent
{"level":"INFO","timestamp":"2025-08-15T22:06:53.234+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"test_agent","tools":["web_search"],"memory":"episodic","name":"test_agent","tools":["web_search"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.234+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.234+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.234+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/test_agent/test_agent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.234+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.234+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/test_agent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.234+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.234+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"web_search","path":"tools/test_agent/web_search.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.234+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["web_search"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.234+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.234+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/test_agent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.234+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.235+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/test_agent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.235+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.235+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/test_agent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.235+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"test_agent","tools":["web_search"],"memory":"episodic","name":"test_agent","tools":["web_search"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/test_agent/
  ├── 📄 test_agent.ctx
  ├── 📁 memory/test_agent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/test_agent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/test_agent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/test_agent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test test_agent
   ctx test --behavior --component=test_agent

2️⃣  Start a conversation:
   ctx run test_agent "Hello, can you help me?"
   ctx run test_agent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/test_agent/test_agent.ctx
   
   # Modify prompts
   nano prompts/test_agent/agent_response.md
   
   # Add custom tools
   nano tools/test_agent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=test_agent
   
   # View behavior reports
   cat tests/reports/behavior_test_agent.json

📚 Configuration Details:
   • Tools: web_search
   • Memory: episodic
   • Context: contexts/test_agent/test_agent.ctx
   • Memory Config: memory/test_agent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandValidation/valid_name_agent-123
{"level":"INFO","timestamp":"2025-08-15T22:06:53.235+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"agent-123","tools":["web_search"],"memory":"episodic","name":"agent-123","tools":["web_search"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.235+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.235+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.235+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/agent-123/agent-123.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.235+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.235+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/agent-123/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.235+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.235+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"web_search","path":"tools/agent-123/web_search.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.235+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["web_search"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.235+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.236+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/agent-123/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.236+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.236+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/agent-123/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.236+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.236+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/agent-123/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.236+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"agent-123","tools":["web_search"],"memory":"episodic","name":"agent-123","tools":["web_search"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/agent-123/
  ├── 📄 agent-123.ctx
  ├── 📁 memory/agent-123/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/agent-123/
  │   └── 📄 agent_response.md
  ├── 📁 tools/agent-123/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/agent-123/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test agent-123
   ctx test --behavior --component=agent-123

2️⃣  Start a conversation:
   ctx run agent-123 "Hello, can you help me?"
   ctx run agent-123 "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/agent-123/agent-123.ctx
   
   # Modify prompts
   nano prompts/agent-123/agent_response.md
   
   # Add custom tools
   nano tools/agent-123/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=agent-123
   
   # View behavior reports
   cat tests/reports/behavior_agent-123.json

📚 Configuration Details:
   • Tools: web_search
   • Memory: episodic
   • Context: contexts/agent-123/agent-123.ctx
   • Memory Config: memory/agent-123/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandValidation/valid_name_MyAgent
{"level":"INFO","timestamp":"2025-08-15T22:06:53.236+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent","name":"MyAgent","tools":["web_search"],"memory":"episodic","name":"MyAgent","tools":["web_search"],"memory":"episodic"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.236+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Creating agent directory structure"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.236+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent context"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.236+0800","caller":"commands/agent_generator.go:278","msg":"agent context generated","path":"contexts/MyAgent/myagent.ctx"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.236+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent prompts"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.237+0800","caller":"commands/agent_generator.go:314","msg":"agent prompts generated","path":"prompts/MyAgent/agent_response.md"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.237+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tools"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.237+0800","caller":"commands/agent_generator.go:372","msg":"tool template copied","tool":"web_search","path":"tools/MyAgent/web_search.py"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.237+0800","caller":"commands/agent_generator.go:330","msg":"agent tools generated","tools":["web_search"]}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.237+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent tests"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.237+0800","caller":"commands/agent_generator.go:408","msg":"agent tests generated","path":"tests/MyAgent/agent_behavior.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.237+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent memory configuration"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.237+0800","caller":"commands/agent_generator.go:450","msg":"agent memory configuration generated","path":"memory/MyAgent/memory_config.yaml"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.237+0800","caller":"logger/colored_logger.go:181","msg":"ℹ Generating agent requirements"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.237+0800","caller":"commands/agent_generator.go:478","msg":"agent requirements generated","path":"tools/MyAgent/requirements.txt"}

{"level":"INFO","timestamp":"2025-08-15T22:06:53.237+0800","caller":"logger/colored_logger.go:169","msg":"✓ Agent generated successfully","name":"MyAgent","tools":["web_search"],"memory":"episodic","name":"MyAgent","tools":["web_search"],"memory":"episodic"}

🤖 Generated Agent Structure:
  contexts/MyAgent/
  ├── 📄 MyAgent.ctx
  ├── 📁 memory/MyAgent/
  │   ├── 📄 memory_config.yaml
  │   ├── 📁 episodic/
  │   └── 📁 user_preferences/
  ├── 📁 prompts/MyAgent/
  │   └── 📄 agent_response.md
  ├── 📁 tools/MyAgent/
  │   ├── 📄 api.py
  │   └── 📄 requirements.txt
  └── 📁 tests/MyAgent/
      └── 📄 agent_behavior.yaml

🚀 Agent Development Flow:

1️⃣  Test your agent:
   ctx test MyAgent
   ctx test --behavior --component=MyAgent

2️⃣  Start a conversation:
   ctx run MyAgent "Hello, can you help me?"
   ctx run MyAgent "What tools do you have available?"

3️⃣  Start development server:
   ctx serve --addr :8000

4️⃣  Customize your agent:
   # Edit the context file
   nano contexts/MyAgent/MyAgent.ctx
   
   # Modify prompts
   nano prompts/MyAgent/agent_response.md
   
   # Add custom tools
   nano tools/MyAgent/api.py

5️⃣  Monitor agent behavior:
   # Check drift detection
   ctx test --drift-detection --component=MyAgent
   
   # View behavior reports
   cat tests/reports/behavior_MyAgent.json

📚 Configuration Details:
   • Tools: web_search
   • Memory: episodic
   • Context: contexts/MyAgent/MyAgent.ctx
   • Memory Config: memory/MyAgent/memory_config.yaml

🎉 Your agent is ready! Start conversations and customize as needed.
=== RUN   TestCLICommandsTestSuite/TestAgentCommandValidation/invalid_name_a
Error: agent name should be at least 2 characters
Usage:
  agent [flags]

Flags:
  -h, --help            help for agent
  -m, --memory string   Memory type (episodic,none) (default "episodic")
  -t, --tools string    Comma-separated list of tools (web_search,database,api,file_system,email)

=== RUN   TestCLICommandsTestSuite/TestAgentCommandValidation/invalid_name_invalid_name_with_spaces
Error: agent name should not contain spaces
Usage:
  agent [flags]

Flags:
  -h, --help            help for agent
  -m, --memory string   Memory type (episodic,none) (default "episodic")
  -t, --tools string    Comma-separated list of tools (web_search,database,api,file_system,email)

=== RUN   TestCLICommandsTestSuite/TestAgentCommandValidation/invalid_name_invalid-name-with-special-chars!@#
Error: agent name should not contain special characters
Usage:
  agent [flags]

Flags:
  -h, --help            help for agent
  -m, --memory string   Memory type (episodic,none) (default "episodic")
  -t, --tools string    Comma-separated list of tools (web_search,database,api,file_system,email)

=== RUN   TestCLICommandsTestSuite/TestAgentCommandValidation/invalid_name_invalid/name/with/slashes
Error: agent name should not contain slashes
Usage:
  agent [flags]

Flags:
  -h, --help            help for agent
  -m, --memory string   Memory type (episodic,none) (default "episodic")
  -t, --tools string    Comma-separated list of tools (web_search,database,api,file_system,email)

=== RUN   TestCLICommandsTestSuite/TestAgentCommandValidation/invalid_name_invalid\name\with\backslashes
Error: agent name should not contain backslashes
Usage:
  agent [flags]

Flags:
  -h, --help            help for agent
  -m, --memory string   Memory type (episodic,none) (default "episodic")
  -t, --tools string    Comma-separated list of tools (web_search,database,api,file_system,email)

=== RUN   TestCLICommandsTestSuite/TestCommandErrorHandling
Error: unknown command "invalid_command" for "ctx"
Run 'ctx --help' for usage.
Error: accepts 1 arg(s), received 0
Usage:
  agent [flags]

Flags:
  -h, --help            help for agent
  -m, --memory string   Memory type (episodic,none) (default "episodic")
  -t, --tools string    Comma-separated list of tools (web_search,database,api,file_system,email)

=== RUN   TestCLICommandsTestSuite/TestCommandHelp
A comprehensive CLI for the Context-Memory-Prompt (CMP) framework.

Usage:
  ctx [command]

Available Commands:
  completion  Generate the autocompletion script for the specified shell
  generate    Generate CMP components
  help        Help about any command
  plugin      Manage CMP plugins
  version     Show version information

Flags:
  -h, --help   help for ctx

Use "ctx [command] --help" for more information about a command.
Generate RAG systems, agents, and workflows using CMP templates.

Usage:
  generate [command]

Available Commands:
  agent       Generate a conversational agent
  completion  Generate the autocompletion script for the specified shell
  help        Help about any command
  rag         Generate a RAG system
  workflow    Generate a workflow

Flags:
  -h, --help   help for generate

Use "generate [command] --help" for more information about a command.
Generate a conversational agent with specified tools and memory type.

Usage:
  agent [flags]

Flags:
  -h, --help            help for agent
  -m, --memory string   Memory type (episodic,none) (default "episodic")
  -t, --tools string    Comma-separated list of tools (web_search,database,api,file_system,email)
=== RUN   TestCLICommandsTestSuite/TestCommandVersion
Contexis CMP Framework v0.1.14
=== RUN   TestCLICommandsTestSuite/TestGenerateCommandStructure
=== RUN   TestCLICommandsTestSuite/TestGenerateCommandSubcommands
--- PASS: TestCLICommandsTestSuite (0.03s)
    --- PASS: TestCLICommandsTestSuite/TestAgentCommandExecution (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandExecution/successful_execution (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandExecution/missing_tools_flag (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandExecution/missing_memory_flag (0.00s)
    --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation (0.01s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_web_search (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_database (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_api (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_file_system (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_email (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_web_search,database (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_api,email (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_file_system,api,database (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_tools_ (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/invalid_tools_invalid_tool (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/invalid_tools_web_search,invalid_tool (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/invalid_tools_database,invalid_tool,api (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_memory_episodic (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/valid_memory_none (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/invalid_memory_invalid_memory (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/invalid_memory_memory (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlagValidation/invalid_memory_episodic_memory (0.00s)
    --- PASS: TestCLICommandsTestSuite/TestAgentCommandFlags (0.00s)
    --- PASS: TestCLICommandsTestSuite/TestAgentCommandStructure (0.00s)
    --- PASS: TestCLICommandsTestSuite/TestAgentCommandValidation (0.01s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandValidation/valid_name_SupportBot (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandValidation/valid_name_EmailBot (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandValidation/valid_name_FileBot (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandValidation/valid_name_test_agent (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandValidation/valid_name_agent-123 (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandValidation/valid_name_MyAgent (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandValidation/invalid_name_a (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandValidation/invalid_name_invalid_name_with_spaces (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandValidation/invalid_name_invalid-name-with-special-chars!@# (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandValidation/invalid_name_invalid/name/with/slashes (0.00s)
        --- PASS: TestCLICommandsTestSuite/TestAgentCommandValidation/invalid_name_invalid\name\with\backslashes (0.00s)
    --- PASS: TestCLICommandsTestSuite/TestCommandErrorHandling (0.00s)
    --- PASS: TestCLICommandsTestSuite/TestCommandHelp (0.00s)
    --- PASS: TestCLICommandsTestSuite/TestCommandVersion (0.00s)
    --- PASS: TestCLICommandsTestSuite/TestGenerateCommandStructure (0.00s)
    --- PASS: TestCLICommandsTestSuite/TestGenerateCommandSubcommands (0.00s)
=== RUN   TestBuildCommandExists
--- PASS: TestBuildCommandExists (0.00s)
=== RUN   TestHealthz
{"level":"INFO","timestamp":"2025-08-15T22:06:53.239+0800","caller":"server/server.go:404","msg":"request completed","request_id":"20250815T140653.239962000Z","method":"GET","path":"/healthz","status":200,"duration_seconds":0.000028291}
--- PASS: TestHealthz (0.00s)
=== RUN   TestReadyz
{"level":"INFO","timestamp":"2025-08-15T22:06:53.240+0800","caller":"server/server.go:404","msg":"request completed","request_id":"20250815T140653.240646000Z","method":"GET","path":"/readyz","status":200,"duration_seconds":0.000004458}
--- PASS: TestReadyz (0.00s)
=== RUN   TestVersion
{"level":"INFO","timestamp":"2025-08-15T22:06:53.241+0800","caller":"server/server.go:404","msg":"request completed","request_id":"20250815T140653.241143000Z","method":"GET","path":"/version","status":200,"duration_seconds":0.000079833}
--- PASS: TestVersion (0.00s)
=== RUN   TestPIBlocking
{"level":"INFO","timestamp":"2025-08-15T22:06:53.241+0800","caller":"security/audit.go:64","msg":"audit","request_id":"20250815T140653.241851000Z"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.242+0800","caller":"server/server.go:404","msg":"request completed","request_id":"20250815T140653.241851000Z","method":"POST","path":"/api/v1/chat","status":403,"duration_seconds":0.000449708}
--- PASS: TestPIBlocking (0.00s)
=== RUN   TestSourceConstrained_NoResults
{"level":"INFO","timestamp":"2025-08-15T22:06:53.244+0800","caller":"security/audit.go:64","msg":"audit","request_id":"20250815T140653.243358000Z"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.244+0800","caller":"server/server.go:404","msg":"request completed","request_id":"20250815T140653.243358000Z","method":"POST","path":"/api/v1/chat","status":424,"duration_seconds":0.000815208}
--- PASS: TestSourceConstrained_NoResults (0.00s)
=== RUN   TestCitationEnforcement
{"level":"INFO","timestamp":"2025-08-15T22:06:53.247+0800","caller":"security/audit.go:64","msg":"audit","request_id":"20250815T140653.247129000Z"}
{"level":"INFO","timestamp":"2025-08-15T22:06:53.247+0800","caller":"server/server.go:404","msg":"request completed","request_id":"20250815T140653.247129000Z","method":"POST","path":"/api/v1/chat","status":422,"duration_seconds":0.0004785}
--- PASS: TestCitationEnforcement (0.00s)
=== RUN   TestChatWithoutProvider_RendersTemplate
{"level":"INFO","timestamp":"2025-08-15T22:06:53.249+0800","caller":"server/server.go:404","msg":"request completed","request_id":"20250815T140653.249452000Z","method":"POST","path":"/api/v1/chat","status":200,"duration_seconds":0.0002285}
--- PASS: TestChatWithoutProvider_RendersTemplate (0.00s)
=== RUN   TestChatWithProvider_UsesInferenceOutput
{"level":"INFO","timestamp":"2025-08-15T22:06:53.251+0800","caller":"server/server.go:404","msg":"request completed","request_id":"20250815T140653.251105000Z","method":"POST","path":"/api/v1/chat","status":200,"duration_seconds":0.000225292}
--- PASS: TestChatWithProvider_UsesInferenceOutput (0.00s)
=== RUN   TestWorkflowGeneratorTestSuite
=== RUN   TestWorkflowGeneratorTestSuite/TestStepStructure
=== RUN   TestWorkflowGeneratorTestSuite/TestStepStructure/step_research
=== RUN   TestWorkflowGeneratorTestSuite/TestStepStructure/step_write
=== RUN   TestWorkflowGeneratorTestSuite/TestStepStructure/step_review
=== RUN   TestWorkflowGeneratorTestSuite/TestStepStructure/step_extract
=== RUN   TestWorkflowGeneratorTestSuite/TestStepStructure/step_transform
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_research
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_write
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_review
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_extract
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_transform
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_load
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_analyze
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_generate
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_validate
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_deploy
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/invalid_invalid_step
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/invalid_
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/invalid_step
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/invalid_research_step
=== RUN   TestWorkflowGeneratorTestSuite/TestStepTypeValidation/invalid_write_process
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigCreation
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigCreation/config_ContentPipeline
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigCreation/config_DataProcessing
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigCreation/config_MLTraining
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigCreation/config_test_workflow
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigCreation/config_workflow-123
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigCreation/config_MyWorkflow
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigDefaults
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/valid_research_write_review
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/valid_extract_transform_load
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/valid_analyze_generate_validate
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/valid_research_write
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/valid_deploy
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/invalid_
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/invalid_invalid_step
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/invalid_research_invalid_step_review
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/invalid_research_write_invalid_step_deploy
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidationEdgeCases
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/valid_ContentPipeline
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/valid_DataProcessing
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/valid_MLTraining
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/valid_test_workflow
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/valid_workflow-123
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/valid_MyWorkflow
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/invalid_
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/invalid_a
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/invalid_invalid_name_with_spaces
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/invalid_invalid-name-with-special-chars!@#
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/invalid_invalid/name/with/slashes
=== RUN   TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/invalid_invalid\name\with\backslashes
--- PASS: TestWorkflowGeneratorTestSuite (0.00s)
    --- PASS: TestWorkflowGeneratorTestSuite/TestStepStructure (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepStructure/step_research (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepStructure/step_write (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepStructure/step_review (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepStructure/step_extract (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepStructure/step_transform (0.00s)
    --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_research (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_write (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_review (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_extract (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_transform (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_load (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_analyze (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_generate (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_validate (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/valid_deploy (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/invalid_invalid_step (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/invalid_ (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/invalid_step (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/invalid_research_step (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestStepTypeValidation/invalid_write_process (0.00s)
    --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigCreation (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigCreation/config_ContentPipeline (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigCreation/config_DataProcessing (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigCreation/config_MLTraining (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigCreation/config_test_workflow (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigCreation/config_workflow-123 (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigCreation/config_MyWorkflow (0.00s)
    --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigDefaults (0.00s)
    --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/valid_research_write_review (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/valid_extract_transform_load (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/valid_analyze_generate_validate (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/valid_research_write (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/valid_deploy (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/invalid_ (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/invalid_invalid_step (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/invalid_research_invalid_step_review (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidation/invalid_research_write_invalid_step_deploy (0.00s)
    --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowConfigValidationEdgeCases (0.00s)
    --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/valid_ContentPipeline (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/valid_DataProcessing (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/valid_MLTraining (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/valid_test_workflow (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/valid_workflow-123 (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/valid_MyWorkflow (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/invalid_ (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/invalid_a (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/invalid_invalid_name_with_spaces (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/invalid_invalid-name-with-special-chars!@# (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/invalid_invalid/name/with/slashes (0.00s)
        --- PASS: TestWorkflowGeneratorTestSuite/TestWorkflowNameValidation/invalid_invalid\name\with\backslashes (0.00s)
PASS
ok  	github.com/contexis-cmp/contexis/tests/unit	0.653s
?   	github.com/contexis-cmp/contexis/tests/unit/helpers	[no test files]
